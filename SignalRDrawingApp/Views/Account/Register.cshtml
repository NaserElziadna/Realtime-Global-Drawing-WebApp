@model SignalRDrawingApp.ViewModels.RegisterViewModel

<form asp-action="Register" method="post" id="registerForm" novalidate>
    <div asp-validation-summary="All" class="text-danger mb-3"></div>
    <input name="ReturnUrl" type="hidden" value="@ViewData["ReturnUrl"]" />
    
    <div class="form-group">
        <label asp-for="Email" class="form-label">
            <i class="fas fa-envelope me-2"></i>Email Address
        </label>
        <input asp-for="Email" class="form-control form-control-lg" placeholder="Enter your email" autocomplete="email" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    
    <div class="form-group">
        <label asp-for="Nickname" class="form-label">
            <i class="fas fa-user me-2"></i>Nickname
        </label>
        <input asp-for="Nickname" class="form-control form-control-lg" placeholder="Choose a nickname" autocomplete="nickname" />
        <span asp-validation-for="Nickname" class="text-danger"></span>
        <small class="form-text text-muted">This will be your display name in the chat and canvas.</small>
    </div>
    
    <div class="form-group">
        <label asp-for="Password" class="form-label">
            <i class="fas fa-lock me-2"></i>Password
        </label>
        <div class="input-group">
            <input asp-for="Password" class="form-control form-control-lg" placeholder="Create a password" autocomplete="new-password" />
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                    <i class="fas fa-eye"></i>
                </button>
            </div>
        </div>
        <span asp-validation-for="Password" class="text-danger"></span>
        <small class="form-text text-muted">Minimum 6 characters required.</small>
    </div>
    
    <div class="form-group">
        <label asp-for="ConfirmPassword" class="form-label">
            <i class="fas fa-lock me-2"></i>Confirm Password
        </label>
        <div class="input-group">
            <input asp-for="ConfirmPassword" class="form-control form-control-lg" placeholder="Confirm your password" autocomplete="new-password" />
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" id="toggleConfirmPassword">
                    <i class="fas fa-eye"></i>
                </button>
            </div>
        </div>
        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
    </div>
    
    <button type="submit" class="btn btn-success btn-lg btn-block" id="registerBtn">
        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
        <span class="btn-text">Create Account</span>
    </button>
</form>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Toggle password visibility
    const togglePassword = document.getElementById('togglePassword');
    const passwordField = document.getElementById('Password');
    
    const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
    const confirmPasswordField = document.getElementById('ConfirmPassword');
    
    if (togglePassword && passwordField) {
        togglePassword.addEventListener('click', function() {
            const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordField.setAttribute('type', type);
            
            const icon = togglePassword.querySelector('i');
            icon.classList.toggle('fa-eye');
            icon.classList.toggle('fa-eye-slash');
        });
    }
    
    if (toggleConfirmPassword && confirmPasswordField) {
        toggleConfirmPassword.addEventListener('click', function() {
            const type = confirmPasswordField.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordField.setAttribute('type', type);
            
            const icon = toggleConfirmPassword.querySelector('i');
            icon.classList.toggle('fa-eye');
            icon.classList.toggle('fa-eye-slash');
        });
    }
    
    // Handle form submission
    const registerForm = document.getElementById('registerForm');
    if (registerForm) {
        registerForm.addEventListener('submit', function(e) {
            const submitBtn = document.getElementById('registerBtn');
            const spinner = submitBtn.querySelector('.spinner-border');
            const btnText = submitBtn.querySelector('.btn-text');
            
            // Show loading state
            spinner.classList.remove('d-none');
            btnText.textContent = 'Creating Account...';
            submitBtn.disabled = true;
        });
    }
});
</script> 